% Waveguiding video analysis. Code developed by Abhishek Kalpattu at the Fourkas Lab, UMD
%% Loading data 
FF=0; % Load start timestamp
LF=12; % Load end timestamp

vidObj = VideoReader("DLinesHPol750.avi");
s = struct("cdata",zeros(vidObj.Height,vidObj.Width,3,"uint8"),colormap=[]);
vidObj.CurrentTime = FF;
k = 1;
while vidObj.CurrentTime <= LF
    s(k).cdata = readFrame(vidObj);
    k = k+1;
end

vidObj = VideoReader("Square patterning coupling big.avi");
s = struct("cdata",zeros(vidObj.Height,vidObj.Width,3,"uint8"),colormap=[]);
vidObj.CurrentTime = FF;
k = 1;
while vidObj.CurrentTime <= LF
    s(k).cdata = readFrame(vidObj);
    k = k+1;
end

%% Load sets of image files
clear;% Specify the folder where the files live.
G='Seq';
myFolder = append('C:\Research Work\MATLAB ACCESS\',G);
% Check to make sure that folder actually exists.  Warn user if it doesn't.
if ~isfolder(myFolder)
    errorMessage = sprintf('Error: The following folder does not exist:\n%s\nPlease specify a new folder.', myFolder);
    uiwait(warndlg(errorMessage));
    myFolder = uigetdir(); % Ask for a new one.
    if myFolder == 0
         % User clicked Cancel
         return;
    end
end
% Get a list of all files in the folder with the desired file name pattern.
% 
filePattern = fullfile(myFolder, '*.TIF'); % Change to whatever pattern you need.
theFiles = dir(filePattern);
s(1:length(theFiles)) = struct('cdata', [], 'Label', '');
for k = 1 : length(theFiles)
    baseFileName = theFiles(k).name;
    fullFileName = fullfile(theFiles(k).folder, baseFileName);
%     fprintf(1, 'Now reading %s\n', fullFileName);
    % Now do whatever you want with this file name,
    % such as reading it in as an image array with imread()
    imageArray = imread(fullFileName);
%     imshow(imageArray);  % Display image.
    drawnow; % Force display to update immediately.
    s(k).cdata=imageArray;
end
% Re-arranges files in order
S = dir(fullfile(myFolder,'*.jpg'));
% GH=[];
% for i=1:length(S)
%     GH=[GH;imread(fullfile(S(i).folder, S(i).name))];
% end
[~,X] = natsortfiles({S.name});
S = S(X);
Sori=s;s=s(X);

%% Analysing image files (Batch analysis)
% Plays all the image files with a 25 ms delay
figure(1)
for i=1:300
    VG=imagesc((s(i).cdata));
    title(i)
    pause(0.2)
end
% Find and crop useful regions
% 1: The Circle diameter
figure(1);VG=imagesc(s(length(s)).cdata); % This code just plots the last image in the batch of files which should be a PreVid image
[J,TotR] = imcrop(VG); % Crop out the dimensions of the pattern (e.g: the diameter of a circle)



% Define the excitation points on the circle 
x=0:0.015:pi;y=pi:0.015:2*pi; 
G=(TotR(4)/2)*cos(x);J=(TotR(4)/2)*sin(x);
G1=(TotR(4)/2)*cos(y);J1=(TotR(4)/2)*sin(y);
A=[G+(TotR(2)+TotR(4)/2),G1+(TotR(2)+TotR(4)/2)];B=[J1+TotR(1),J+TotR(1)];
DRF=[B;A];

figure(1);VG=imagesc(s(length(s)).cdata); 
[J,CRR] = imcrop(VG); % Choose an area that contains bright waveguiding targets (Au NPs, Ag NWs, CdSe QDs)
% Autogenerated ROIs 
po=1; % Number of horizontal divisions
ko=50; % Number of vertical divisions 
RECT=[];
for i=1:po+1
    for j=1:ko+1
        RECT=[RECT;CRR(1)+(i-1)*round(CRR(3)/po),CRR(2)+(j-1)*round(CRR(4)/ko),round(CRR(3)/po),round(CRR(4)/ko)];
    end 
end

% Main analysis that detects the amount of fluorescence from waveguiding 
N=11; % The number of PreVid frames. These will not be analysed later because they don't contain fluorescence information
EN=[];LArr=[];
for i=1:420
    EmInt1=[];LD=[];
    for l=1:length(RECT(:,1))% You can choose to analyse only a portion of the autogenerated ROIs 
        ROI1=RECT(l,:);p=l;
        ROCx = (RECT(p,1) + RECT(p,1)+RECT(p,3))/2;
        ROCy = (RECT(p,2) + RECT(p,2)+RECT(p,4))/2;
        LD=[LD;sqrt((DRF(1,i)-ROCx)^2+(DRF(2,i)-ROCy)^2)];
        % BG Corr
        figure(1);VG=imagesc(s(1).cdata);
        imh = findobj(figure(1), 'type', 'image');
        YourData = get(imh(1),'CData');
        Cr = imcrop(YourData, [ROI1]);
        S1=size(Cr(:,:,1));S2=size(Cr(:,:,2));S3=size(Cr(:,:,3));
        EmIntBG1=sum(sum(Cr(:,:,1)))/(S1(1)*S1(2))+sum(sum(Cr(:,:,2)))/(S2(1)*S2(2))+sum(sum(Cr(:,:,3)))/(S3(1)*S3(2));
        % ROI calc
        figure(1);VG=imagesc(s(i).cdata);
        imh = findobj(figure(1), 'type', 'image');
        YourData = get(imh(1),'CData');
        Cr = imcrop(YourData, [ROI1]);
        S1=size(Cr(:,:,1));S2=size(Cr(:,:,2));S3=size(Cr(:,:,3));
        EmInt1=[EmInt1;sum(sum(Cr(:,:,1)))/(S1(1)*S1(2))+sum(sum(Cr(:,:,2)))/(S2(1)*S2(2))+sum(sum(Cr(:,:,3)))/(S3(1)*S3(2))-EmIntBG1];
    end 
    EN=[EN,EmInt1];
    LArr=[LArr,LD];
end

% Multiple plots for intensity peaks 
for i=1:10
    hold on; plot(1:length(s)-N,EN(i,:),'LineWidth',1.5);
end

% Measures phi-theta angles for the autogenerated ROIs 
x=0:0.015:pi;y=pi:0.015:2*pi;
DANG=[x,y];
ANG=[]
for l=1:length(RECT(:,1))
    ROI1=RECT(l,:);p=l;
    ROCx = (RECT(p,1) + RECT(p,1)+RECT(p,3))/2;
    ROCy = (RECT(p,2) + RECT(p,2)+RECT(p,4))/2;
    if ROCx-TotR(1)>=0 && ROCy-(TotR(2)+TotR(4)/2)>=0
        QUAD=pi*2;
        ANG=[ANG;(QUAD-(acos(abs((TotR(2)+TotR(4)/2)-ROCy)/sqrt((TotR(1)-ROCx)^2+((TotR(2)+TotR(4)/2)-ROCy)^2))))-DANG];
    end
    if ROCx-TotR(1)>=0 && ROCy-(TotR(2)+TotR(4)/2)<0
        QUAD=pi;
        ANG=[ANG;(acos(abs((TotR(2)+TotR(4)/2)-ROCy)/sqrt((TotR(1)-ROCx)^2+((TotR(2)+TotR(4)/2)-ROCy)^2)))-DANG+QUAD];
    end 
    if ROCx-TotR(1)<0 && ROCy-(TotR(2)+TotR(4)/2)>=0
        QUAD=0;
        ANG=[ANG;(acos(abs((TotR(2)+TotR(4)/2)-ROCy)/sqrt((TotR(1)-ROCx)^2+((TotR(2)+TotR(4)/2)-ROCy)^2)))-DANG+QUAD];
    end
    if ROCx-TotR(1)<0 && ROCy-(TotR(2)+TotR(4)/2)<0
        QUAD=pi;
        ANG=[ANG;(QUAD-(acos(abs((TotR(2)+TotR(4)/2)-ROCy)/sqrt((TotR(1)-ROCx)^2+((TotR(2)+TotR(4)/2)-ROCy)^2))))-DANG];
    end
end
ANG=(ANG)*(180/pi);

i=; % Choose the ROI in RECT that produces sufficient emission intensity
xaxis=ANG(:,i);yaxis=EN(:,i);plot(xaix,yaxis,'o')
%% Single frame image analysis

d=20; %Fill in the frame where you see nanoparticle emission here
VG=(s(length(s)).cdata)*1+(s(d).cdata);
imagesc(VG)
[J,ROI1] = imcrop(VG); % CHANGE ROI1 here to something else each time you choose another nanoparticle
% 13, 19, 13, 14
% RECT update
d=20; %Fill in the frame where you see nanoparticle emission here
VG=(s(length(s)).cdata)*1+(s(d).cdata);
imagesc(VG)
[J,ROI2] = imcrop(VG); % CHANGE ROI1 here to something else each time you choose another nanoparticle

% MEASURE ANGLES FOR ONE ROI
x=0:0.015:pi;y=pi:0.015:2*pi;
DANG=[x,y];DAN=DANG*180/pi;
ANG=[]
ROCx = (ROI1(1) + ROI1(1)+ROI1(3))/2; %bFinds the x and y center of each ROI
ROCy = (ROI1(2) + ROI1(2)+ROI1(4))/2;
if ROCx-TotR(1)>0 && ROCy-(TotR(2)+TotR(4)/2)>0
    QUAD=pi*2;
    ANG=[ANG;(QUAD-(acos(abs((TotR(2)+TotR(4)/2)-ROCy)/sqrt((TotR(1)-ROCx)^2+((TotR(2)+TotR(4)/2)-ROCy)^2))))-DANG];
end
if ROCx-TotR(1)>0 && ROCy-(TotR(2)+TotR(4)/2)<0
    QUAD=pi;
    ANG=[ANG;(acos(abs((TotR(2)+TotR(4)/2)-ROCy)/sqrt((TotR(1)-ROCx)^2+((TotR(2)+TotR(4)/2)-ROCy)^2)))-DANG+QUAD];
end 
if ROCx-TotR(1)<0 && ROCy-(TotR(2)+TotR(4)/2)>0
    QUAD=0;
    ANG=[ANG;(acos(abs((TotR(2)+TotR(4)/2)-ROCy)/sqrt((TotR(1)-ROCx)^2+((TotR(2)+TotR(4)/2)-ROCy)^2)))-DANG+QUAD];
end
if ROCx-TotR(1)<0 && ROCy-(TotR(2)+TotR(4)/2)<0
    QUAD=pi;
    ANG=[ANG;(QUAD-(acos(abs((TotR(2)+TotR(4)/2)-ROCy)/sqrt((TotR(1)-ROCx)^2+((TotR(2)+TotR(4)/2)-ROCy)^2))))-DANG];
end
ANG=(ANG)*(180/pi);

%MAIN ANALYSIS FOR ONE ROI
% Main analysis that detects the amount of fluorescence from waveguiding 
N=11; % The number of PreVid frames. These will not be analysed later because they don't contain fluorescence information
EmInt1=[];LD=[];
for i=1:length(s)-N
%   ROI1=RECT(l,:);p=l;
    ROCx = (ROI1(1) + ROI1(1)+ROI1(3))/2;
    ROCy = (ROI1(2) + ROI1(2)+ROI1(4))/2;
    LD=[LD;sqrt((DRF(1,i)-ROCx)^2+(DRF(2,i)-ROCy)^2)];
    % BG Corr
    figure(1);VG=imagesc(s(1).cdata);
    imh = findobj(figure(1), 'type', 'image');
    YourData = get(imh(1),'CData');
    Cr = imcrop(YourData, [ROI1]);
    S1=size(Cr(:,:,1));S2=size(Cr(:,:,2));S3=size(Cr(:,:,3));
    EmIntBG1=sum(sum(Cr(:,:,1)))/(S1(1)*S1(2))+sum(sum(Cr(:,:,2)))/(S2(1)*S2(2))+sum(sum(Cr(:,:,3)))/(S3(1)*S3(2));
    % ROI calc
    figure(1);VG=imagesc(s(i).cdata);
    imh = findobj(figure(1), 'type', 'image');
    YourData = get(imh(1),'CData');
    Cr = imcrop(YourData, [ROI1]);
    S1=size(Cr(:,:,1));S2=size(Cr(:,:,2));S3=size(Cr(:,:,3));
    EmInt1=[EmInt1;sum(sum(Cr(:,:,1)))/(S1(1)*S1(2))+sum(sum(Cr(:,:,2)))/(S2(1)*S2(2))+sum(sum(Cr(:,:,3)))/(S3(1)*S3(2))-EmIntBG1];
end
%---------------------------------------------------------------------------------------------------------------------------------------
% Angle scatter plots for specific sub ROI
i=7;
hold on; scatter(ANG(i,:),EN(i,:),35,'o','Filled');

%% Line Analysis

% Choose two points and generate a set of ROIs between the two points. 

d=20; %Fill any frame that is appropriate
VG=(s(length(s)).cdata)*1+(s(d).cdata);
imagesc(VG)
[J,ROI1] = imcrop(VG); % Crop your edge 1
d=20; %Fill any frame that is appropriate
VG=(s(length(s)).cdata)*1+(s(d).cdata);
imagesc(VG)
[J,ROI4] = imcrop(VG); % Crop your edge 2

% Calculate the center of each edge points
ROI4Cx = (ROI4(1) + ROI4(1)+ROI4(3))/2
ROI4Cy = (ROI4(2) + ROI4(2)+ROI4(4))/2
ROI1Cx = (ROI1(1) + ROI1(1)+ROI1(3))/2
ROI1Cy = (ROI1(2) + ROI1(2)+ROI1(4))/2

% Finds the slope of the line between the two points
m=(ROI1Cy-ROI4Cy)./(ROI1Cx-ROI4Cx);
xx=linspace(ROI1Cx,ROI4Cx,30); % X coordinates of the ROIs between the two chosen regions
yy=m*xx+ROI4Cy-m*ROI4Cx; % Y coordinates of the ROIs between the two chosen regions

% Create a series of ROIs that you will analyze
RECT=[];
for i=1:length(xx)
    RECT=[RECT;[xx(i)-1,yy(i)-1,2,2]];
end

% Main analysis that detects the amount of fluorescence from waveguiding 
N=11; % The number of PreVid frames. These will not be analysed later because they don't contain fluorescence information
EN=[];LArr=[];
for i=1:420
    EmInt1=[];LD=[];
    for l=1:length(RECT(:,1))% You can choose to analyse only a portion of the autogenerated ROIs 
        ROI1=RECT(l,:);p=l;
        ROCx = (RECT(p,1) + RECT(p,1)+RECT(p,3))/2;
        ROCy = (RECT(p,2) + RECT(p,2)+RECT(p,4))/2;
        LD=[LD;sqrt((DRF(1,i)-ROCx)^2+(DRF(2,i)-ROCy)^2)];
        % BG Corr
        figure(1);VG=imagesc(s(1).cdata);
        imh = findobj(figure(1), 'type', 'image');
        YourData = get(imh(1),'CData');
        Cr = imcrop(YourData, [ROI1]);
        S1=size(Cr(:,:,1));S2=size(Cr(:,:,2));S3=size(Cr(:,:,3));
        EmIntBG1=sum(sum(Cr(:,:,1)))/(S1(1)*S1(2))+sum(sum(Cr(:,:,2)))/(S2(1)*S2(2))+sum(sum(Cr(:,:,3)))/(S3(1)*S3(2));
        % ROI calc
        figure(1);VG=imagesc(s(i).cdata);
        imh = findobj(figure(1), 'type', 'image');
        YourData = get(imh(1),'CData');
        Cr = imcrop(YourData, [ROI1]);
        S1=size(Cr(:,:,1));S2=size(Cr(:,:,2));S3=size(Cr(:,:,3));
        EmInt1=[EmInt1;sum(sum(Cr(:,:,1)))/(S1(1)*S1(2))+sum(sum(Cr(:,:,2)))/(S2(1)*S2(2))+sum(sum(Cr(:,:,3)))/(S3(1)*S3(2))-EmIntBG1];
    end 
    EN=[EN,EmInt1];
    LArr=[LArr,LD];
end

%% Write Videos
writerObj = VideoWriter(append(G,'_2.avi')); %'G' is the label of your video file
writerObj.FrameRate = 60;
% set the seconds per image
% open the video writer
open(writerObj);
% write the frames to the video
for i=1:length(s)-11
    % convert the image to a frame
    frame = (s(length(s)).cdata)*1.5+((s(i).cdata-2.5)*3) ;    
    writeVideo(writerObj, frame);
end
close(writerObj)
