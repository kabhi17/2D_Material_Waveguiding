%% Load sets of image files
clear;% Specify the folder where the files live.
G='Seq';
myFolder = append('C:\Research Work\MATLAB ACCESS\',G);
% Check to make sure that folder actually exists.  Warn user if it doesn't.
if ~isfolder(myFolder)
    errorMessage = sprintf('Error: The following folder does not exist:\n%s\nPlease specify a new folder.', myFolder);
    uiwait(warndlg(errorMessage));
    myFolder = uigetdir(); % Ask for a new one.
    if myFolder == 0
         % User clicked Cancel
         return;
    end
end
% Get a list of all files in the folder with the desired file name pattern.
% 
filePattern = fullfile(myFolder, '*.TIF'); % Change to whatever pattern you need.
theFiles = dir(filePattern);
s(1:length(theFiles)) = struct('cdata', [], 'Label', '');
for k = 1 : length(theFiles)
    baseFileName = theFiles(k).name;
    fullFileName = fullfile(theFiles(k).folder, baseFileName);
%     fprintf(1, 'Now reading %s\n', fullFileName);
    % Now do whatever you want with this file name,
    % such as reading it in as an image array with imread()
    imageArray = imread(fullFileName);
%     imshow(imageArray);  % Display image.
    drawnow; % Force display to update immediately.
    s(k).cdata=imageArray;
end
% Re-arranges files in order
S = dir(fullfile(myFolder,'*.jpg'));
% GH=[];
% for i=1:length(S)
%     GH=[GH;imread(fullfile(S(i).folder, S(i).name))];
% end
[~,X] = natsortfiles({S.name});
S = S(X);
Sori=s;s=s(X);

%% Analysing image files
% Plays all the image files with a 25 ms delay
figure(1)
for i=1:300
    VG=imagesc((s(i).cdata));
    title(i)
    pause(0.2)
end
% Find and crop useful regions
% 1: The Circle diameter
figure(1);VG=imagesc(s(length(s)).cdata); % This code just plots the last image in the batch of files which should be a PreVid image
[J,TotR] = imcrop(VG); % Crop out the dimensions of the pattern (e.g: the diameter of a circle)
figure(1);VG=imagesc(s(length(s)).cdata); 
[J,CRR] = imcrop(VG); % Choose an area that contains bright waveguiding targets (Au NPs, Ag NWs, CdSe QDs)
% CRR=ROI1;

% Autogenerated ROIs 
po=1; % Number of horizontal divisions
ko=50; % Number of vertical divisions 
RECT=[];
for i=1:po+1
    for j=1:ko+1
        RECT=[RECT;CRR(1)+(i-1)*round(CRR(3)/po),CRR(2)+(j-1)*round(CRR(4)/ko),round(CRR(3)/po),round(CRR(4)/ko)];
    end 
end

TotR=[TotRO(1),TotRO(2)-35,TotRO(3),TotRO(4)+70];

% Define the excitation points on the circle 
x=0:0.015:pi;y=pi:0.015:2*pi; 
G=(TotR(4)/2)*cos(x);J=(TotR(4)/2)*sin(x);
G1=(TotR(4)/2)*cos(y);J1=(TotR(4)/2)*sin(y);
A=[G+(TotR(2)+TotR(4)/2),G1+(TotR(2)+TotR(4)/2)];B=[J1+TotR(1),J+TotR(1)];
DRF=[B;A];

TotRO=TotR;DRFO=DRF;

RECT=[];
for i=1:10:length(DRF)
    RECT=[RECT;DRF(1,i)-2,DRF(2,i)-2,4,4];
end
DDA=[]
for i=1:10:length(DRF)
    DDA=[DDA,DANG(i)];
end
% Main analysis that detects the amount of fluorescence from waveguiding 
N=11; % The number of PreVid frames. These will not be analysed later because they don't contain fluorescence information
EN=[];LArr=[];
for i=1:420
    EmInt1=[];LD=[];
    for l=1:length(RECT(:,1))% You can choose to analyse only a portion of the autogenerated ROIs 
        ROI1=RECT(l,:);p=l;
        ROCx = (RECT(p,1) + RECT(p,1)+RECT(p,3))/2;
        ROCy = (RECT(p,2) + RECT(p,2)+RECT(p,4))/2;
        LD=[LD;sqrt((DRF(1,i)-ROCx)^2+(DRF(2,i)-ROCy)^2)];
        % BG Corr
        figure(1);VG=imagesc(s(1).cdata);
        imh = findobj(figure(1), 'type', 'image');
        YourData = get(imh(1),'CData');
        Cr = imcrop(YourData, [ROI1]);
        S1=size(Cr(:,:,1));S2=size(Cr(:,:,2));S3=size(Cr(:,:,3));
        EmIntBG1=sum(sum(Cr(:,:,1)))/(S1(1)*S1(2))+sum(sum(Cr(:,:,2)))/(S2(1)*S2(2))+sum(sum(Cr(:,:,3)))/(S3(1)*S3(2));
        % ROI calc
        figure(1);VG=imagesc(s(i).cdata);
        imh = findobj(figure(1), 'type', 'image');
        YourData = get(imh(1),'CData');
        Cr = imcrop(YourData, [ROI1]);
        S1=size(Cr(:,:,1));S2=size(Cr(:,:,2));S3=size(Cr(:,:,3));
        EmInt1=[EmInt1;sum(sum(Cr(:,:,1)))/(S1(1)*S1(2))+sum(sum(Cr(:,:,2)))/(S2(1)*S2(2))+sum(sum(Cr(:,:,3)))/(S3(1)*S3(2))-EmIntBG1];
    end 
    EN=[EN,EmInt1];
    LArr=[LArr,LD];
end

% Multiple plots for intensity peaks 
for i=1:10
    hold on; plot(1:length(s)-N,EN(i,:),'LineWidth',1.5);
end

% Measures phi-theta angles for the autogenerated ROIs 
x=0:0.015:pi;y=pi:0.015:2*pi;
DANG=[x,y];
ANG=[]
for l=1:length(RECT(:,1))
    ROI1=RECT(l,:);p=l;
    ROCx = (RECT(p,1) + RECT(p,1)+RECT(p,3))/2;
    ROCy = (RECT(p,2) + RECT(p,2)+RECT(p,4))/2;
    if ROCx-TotR(1)>=0 && ROCy-(TotR(2)+TotR(4)/2)>=0
        QUAD=pi*2;
        ANG=[ANG;(QUAD-(acos(abs((TotR(2)+TotR(4)/2)-ROCy)/sqrt((TotR(1)-ROCx)^2+((TotR(2)+TotR(4)/2)-ROCy)^2))))-DANG];
    end
    if ROCx-TotR(1)>=0 && ROCy-(TotR(2)+TotR(4)/2)<0
        QUAD=pi;
        ANG=[ANG;(acos(abs((TotR(2)+TotR(4)/2)-ROCy)/sqrt((TotR(1)-ROCx)^2+((TotR(2)+TotR(4)/2)-ROCy)^2)))-DANG+QUAD];
    end 
    if ROCx-TotR(1)<0 && ROCy-(TotR(2)+TotR(4)/2)>=0
        QUAD=0;
        ANG=[ANG;(acos(abs((TotR(2)+TotR(4)/2)-ROCy)/sqrt((TotR(1)-ROCx)^2+((TotR(2)+TotR(4)/2)-ROCy)^2)))-DANG+QUAD];
    end
    if ROCx-TotR(1)<0 && ROCy-(TotR(2)+TotR(4)/2)<0
        QUAD=pi;
        ANG=[ANG;(QUAD-(acos(abs((TotR(2)+TotR(4)/2)-ROCy)/sqrt((TotR(1)-ROCx)^2+((TotR(2)+TotR(4)/2)-ROCy)^2))))-DANG];
    end
end
ANG=(ANG)*(180/pi);

TANG=[];
for l=1:length(RECT(:,1))
    ROI1=RECT(l,:);p=l;
    ROCx = (RECT(p,1) + RECT(p,1)+RECT(p,3))/2;
    ROCy = (RECT(p,2) + RECT(p,2)+RECT(p,4))/2;
    if ROCx-TotR(1)>=0 && ROCy-(TotR(2)+TotR(4)/2)>=0
        QUAD=pi*2;
        TANG=[TANG;(QUAD-(acos(abs((TotR(2)+TotR(4)/2)-ROCy)/sqrt((TotR(1)-ROCx)^2+((TotR(2)+TotR(4)/2)-ROCy)^2))))];
    end
    if ROCx-TotR(1)>=0 && ROCy-(TotR(2)+TotR(4)/2)<0
        QUAD=pi;
        TANG=[TANG;(acos(abs((TotR(2)+TotR(4)/2)-ROCy)/sqrt((TotR(1)-ROCx)^2+((TotR(2)+TotR(4)/2)-ROCy)^2)))+QUAD];
    end 
    if ROCx-TotR(1)<0 && ROCy-(TotR(2)+TotR(4)/2)>=0
        QUAD=0;
        TANG=[TANG;(acos(abs((TotR(2)+TotR(4)/2)-ROCy)/sqrt((TotR(1)-ROCx)^2+((TotR(2)+TotR(4)/2)-ROCy)^2)))+QUAD];
    end
    if ROCx-TotR(1)<0 && ROCy-(TotR(2)+TotR(4)/2)<0
        QUAD=pi;
        TANG=[TANG;(QUAD-(acos(abs((TotR(2)+TotR(4)/2)-ROCy)/sqrt((TotR(1)-ROCx)^2+((TotR(2)+TotR(4)/2)-ROCy)^2))))];
    end
end
TANG=TANG*180/pi;

% 1,5,13,25,30
% 36,42,50,55,59
% 67, 72, 89
% Phi - theta values for intensity plots
x=0:0.0015:pi;y=pi:0.0015:2*pi;
DANG1=[x,y];
ANGn=[]
for l=1:77
    ROI1=RECT(l,:);p=l;
    ROCx = (RECT(p,1) + RECT(p,1)+RECT(p,3))/2;
    ROCy = (RECT(p,2) + RECT(p,2)+RECT(p,4))/2;
    if ROCx-TotR(1)>0 && ROCy-(TotR(2)+TotR(4)/2)>0
        QUAD=pi*2;
        ANGn=[ANGn;(QUAD-(acos(abs((TotR(2)+TotR(4)/2)-ROCy)/sqrt((TotR(1)-ROCx)^2+((TotR(2)+TotR(4)/2)-ROCy)^2))))-DANG1];
    end
    if ROCx-TotR(1)>0 && ROCy-(TotR(2)+TotR(4)/2)<0
        QUAD=pi;
        ANGn=[ANGn;(acos(abs((TotR(2)+TotR(4)/2)-ROCy)/sqrt((TotR(1)-ROCx)^2+((TotR(2)+TotR(4)/2)-ROCy)^2)))-DANG1+QUAD];
    end 
    if ROCx-TotR(1)<0 && ROCy-(TotR(2)+TotR(4)/2)>0
        QUAD=0;
        ANGn=[ANGn;(acos(abs((TotR(2)+TotR(4)/2)-ROCy)/sqrt((TotR(1)-ROCx)^2+((TotR(2)+TotR(4)/2)-ROCy)^2)))-DANG1+QUAD];
    end
    if ROCx-TotR(1)<0 && ROCy-(TotR(2)+TotR(4)/2)<0
        QUAD=pi;
        ANGn=[ANGn;(QUAD-(acos(abs((TotR(2)+TotR(4)/2)-ROCy)/sqrt((TotR(1)-ROCx)^2+((TotR(2)+TotR(4)/2)-ROCy)^2))))-DANG1];
    end
end
ANGn=(ANGn)*(180/pi);
%------------------------------------------------------------------------------------------------------------
d=20; %Fill in the frame where you see nanoparticle emission here
VG=(s(length(s)).cdata)*1+(s(d).cdata);
imagesc(VG)
[J,ROI1] = imcrop(VG); % CHANGE ROI1 here to something else each time you choose another nanoparticle
% 13, 19, 13, 14
% RECT update
d=20; %Fill in the frame where you see nanoparticle emission here
VG=(s(length(s)).cdata)*1+(s(d).cdata);
imagesc(VG)
[J,ROI4] = imcrop(VG); % CHANGE ROI1 here to something else each time you choose another nanoparticle

ROI4Cx = (ROI4(1) + ROI4(1)+ROI4(3))/2
ROI4Cy = (ROI4(2) + ROI4(2)+ROI4(4))/2

ROI1Cx = (ROI1(1) + ROI1(1)+ROI1(3))/2
ROI1Cy = (ROI1(2) + ROI1(2)+ROI1(4))/2

% MEASURE ANGLES FOR ONE ROI
x=0:0.015:pi;y=pi:0.015:2*pi;
DANG=[x,y];DAN=DANG*180/pi;
ANG=[]
% ROI1=5 % Fill in your ROI name here 
ROCx = (ROI1(1) + ROI1(1)+ROI1(3))/2;
ROCy = (ROI1(2) + ROI1(2)+ROI1(4))/2;
if ROCx-TotR(1)>0 && ROCy-(TotR(2)+TotR(4)/2)>0
    QUAD=pi*2;
    ANG=[ANG;(QUAD-(acos(abs((TotR(2)+TotR(4)/2)-ROCy)/sqrt((TotR(1)-ROCx)^2+((TotR(2)+TotR(4)/2)-ROCy)^2))))-DANG];
end
if ROCx-TotR(1)>0 && ROCy-(TotR(2)+TotR(4)/2)<0
    QUAD=pi;
    ANG=[ANG;(acos(abs((TotR(2)+TotR(4)/2)-ROCy)/sqrt((TotR(1)-ROCx)^2+((TotR(2)+TotR(4)/2)-ROCy)^2)))-DANG+QUAD];
end 
if ROCx-TotR(1)<0 && ROCy-(TotR(2)+TotR(4)/2)>0
    QUAD=0;
    ANG=[ANG;(acos(abs((TotR(2)+TotR(4)/2)-ROCy)/sqrt((TotR(1)-ROCx)^2+((TotR(2)+TotR(4)/2)-ROCy)^2)))-DANG+QUAD];
end
if ROCx-TotR(1)<0 && ROCy-(TotR(2)+TotR(4)/2)<0
    QUAD=pi;
    ANG=[ANG;(QUAD-(acos(abs((TotR(2)+TotR(4)/2)-ROCy)/sqrt((TotR(1)-ROCx)^2+((TotR(2)+TotR(4)/2)-ROCy)^2))))-DANG];
end
ANG=(ANG)*(180/pi);

%MAIN ANALYSIS FOR ONE ROI
% Main analysis that detects the amount of fluorescence from waveguiding 
N=11; % The number of PreVid frames. These will not be analysed later because they don't contain fluorescence information
EmInt1=[];LD=[];
for i=1:length(s)-N
%   ROI1=RECT(l,:);p=l;
    ROCx = (ROI1(1) + ROI1(1)+ROI1(3))/2;
    ROCy = (ROI1(2) + ROI1(2)+ROI1(4))/2;
    LD=[LD;sqrt((DRF(1,i)-ROCx)^2+(DRF(2,i)-ROCy)^2)];
    % BG Corr
    figure(1);VG=imagesc(s(1).cdata);
    imh = findobj(figure(1), 'type', 'image');
    YourData = get(imh(1),'CData');
    Cr = imcrop(YourData, [ROI1]);
    S1=size(Cr(:,:,1));S2=size(Cr(:,:,2));S3=size(Cr(:,:,3));
    EmIntBG1=sum(sum(Cr(:,:,1)))/(S1(1)*S1(2))+sum(sum(Cr(:,:,2)))/(S2(1)*S2(2))+sum(sum(Cr(:,:,3)))/(S3(1)*S3(2));
    % ROI calc
    figure(1);VG=imagesc(s(i).cdata);
    imh = findobj(figure(1), 'type', 'image');
    YourData = get(imh(1),'CData');
    Cr = imcrop(YourData, [ROI1]);
    S1=size(Cr(:,:,1));S2=size(Cr(:,:,2));S3=size(Cr(:,:,3));
    EmInt1=[EmInt1;sum(sum(Cr(:,:,1)))/(S1(1)*S1(2))+sum(sum(Cr(:,:,2)))/(S2(1)*S2(2))+sum(sum(Cr(:,:,3)))/(S3(1)*S3(2))-EmIntBG1];
end
%---------------------------------------------------------------------------------------------------------------------------------------
% Angle scatter plots for specific sub ROI
i=7;
hold on; scatter(ANG(i,:),EN(i,:),35,'o','Filled');

%% Write Videos
writerObj = VideoWriter(append(G,'_2.avi'));
writerObj.FrameRate = 60;
% set the seconds per image
% open the video writer
open(writerObj);
% write the frames to the video
for i=1:length(s)-11
    % convert the image to a frame
    frame = (s(length(s)).cdata)*1.5+((s(i).cdata-2.5)*3) ;    
    writeVideo(writerObj, frame);
end
close(writerObj)
%% Gaussian fitting 

% ROI at max: 7, 14, 21, 26, 32, 38, 44, 52, 58, 66, 71

% Mon Gaussian Fit
i=6
scatter(ANG(i,:),EN(i,:),30,'o','Filled','color','k');
hold on; plot(min(ANG(i,:)):0.01:max(ANG(i,:)),a1*exp(-(((min(ANG(i,:)):0.01:max(ANG(i,:)))-b1)/c1).^2)+d,'LineWidth',1.5,'color','r')
xlim([min(ANG(i,:)) max(ANG(i,:))])
ylim([-2 max(EN(i,:))+max(EN(i,:))*0.1])
xlabel("\phi_0 - \theta (degrees)")
ylabel("RGB counts")
legend(append('Data (ROI ',num2str(i),')'),'Single gaussian fit')

% Dual Gaussian fit
i=9
scatter(ANG(i,:),EN(i,:),30,'o','Filled','color','k');
hold on; plot(min(ANG(i,:)):0.01:max(ANG(i,:)),a1*exp(-(((min(ANG(i,:)):0.01:max(ANG(i,:)))-b1)/c1).^2)+a2*exp(-(((min(ANG(i,:)):0.01:max(ANG(i,:)))-b2)/c2).^2)+d,'LineWidth',1.5,'color','k')
xlim([min(ANG(i,:)) max(ANG(i,:))])
ylim([-2 max(EN(i,:))+max(EN(i,:))*0.1])
xlabel("\phi_0 - \theta (degrees)")
ylabel("RGB counts")
legend(append('Data (ROI ',num2str(i),')'),'Double gaussian fit')

% Triple Gaussian fit
i=5;
scatter(ANG(i,:),EN(i,:),30,'o','Filled','color','k');
hold on; plot(min(ANG(i,:)):0.01:max(ANG(i,:)),a1*exp(-(((min(ANG(i,:)):0.01:max(ANG(i,:)))-b1)/c1).^2)+a2*exp(-(((min(ANG(i,:)):0.01:max(ANG(i,:)))-b2)/c2).^2)+a3*exp(-(((min(ANG(i,:)):0.01:max(ANG(i,:)))-b3)/c3).^2)+d,'LineWidth',1.5,'color','r')
xlim([min(ANG(i,:)) max(ANG(i,:))])
ylim([-2 max(EN(i,:))+max(EN(i,:))*0.1])
xlabel("\phi_0 - \theta (degrees)")
ylabel("Waveguided emission intensity (RGB counts)")
legend(append('Data (ROI ',num2str(i),')'),'Triple gaussian fit')
%Quadrouple Gaussian fit
i=2;
scatter(ANG(i,:),EN(i,:),30,'o','Filled','color','k');
hold on; plot(min(ANG(i,:)):0.01:max(ANG(i,:)),a1*exp(-(((min(ANG(i,:)):0.01:max(ANG(i,:)))-b1)/c1).^2)+a2*exp(-(((min(ANG(i,:)):0.01:max(ANG(i,:)))-b2)/c2).^2)+a3*exp(-(((min(ANG(i,:)):0.01:max(ANG(i,:)))-b3)/c3).^2)+a4*exp(-(((min(ANG(i,:)):0.01:max(ANG(i,:)))-b4)/c4).^2),'LineWidth',1.5,'color','r')
xlim([min(ANG(i,:)) max(ANG(i,:))])
ylim([-2 max(EN(i,:))+max(EN(i,:))*0.1])
xlabel("\phi_0 - \theta (degrees)")
ylabel("Waveguided emission intensity (RGB counts)")
legend(append('Data (ROI ',num2str(i),')'),'Triple gaussian fit')

ANG=ANGS3;EN=ENS3;
% Quintuple Gaussian fit
i=1
scatter(ANG(i,:),EN(i,:),30,'o','Filled','color','k');
hold on; plot(min(ANG(i,:)):0.01:max(ANG(i,:)),a1*exp(-(((min(ANG(i,:)):0.01:max(ANG(i,:)))-b1)/c1).^2)+a2*exp(-(((min(ANG(i,:)):0.01:max(ANG(i,:)))-b2)/c2).^2)+a3*exp(-(((min(ANG(i,:)):0.01:max(ANG(i,:)))-b3)/c3).^2)+a4*exp(-(((min(ANG(i,:)):0.01:max(ANG(i,:)))-b4)/c4).^2)+a5*exp(-(((min(ANG(i,:)):0.01:max(ANG(i,:)))-b5)/c5).^2),'LineWidth',1.5,'color','r')
xlim([min(ANG(i,:)) max(ANG(i,:))])
ylim([-2 max(EN(i,:))+max(EN(i,:))*0.1])
xlabel("\phi_0 - \theta (degrees)")
ylabel("RGB counts")
legend(append('Data (ROI ',num2str(i),')'),'Multiple gaussian fit')

% Frame plot with label
i=6;plot(1:length(s)-N,EN(i,:),'LineWidth',2.5);
xlim([0 418])
xlabel("Frame number")
ylabel("Waveguided intensity (RGB counts)")
fontsize(gcf,scale=1.5)

i=66;
hold on;scatter(ANG(i,:),EN(i,:),30,'o','Filled','color','k');

% AA=[16,]
% BB=[-3.979,-3.376,-1.844,-4.327]
% CC=[3.239,1.438,3.736,2.628]
% CC2=[11.76,9.093,9.601,9.582,2.806,9.48]
% Dist=[min(LArr(3,:))*0.0581,min(LArr(7,:))*0.0581,min(LArr(12,:))*0.0581,min(LArr(17,:))*0.0581,min(LArr(21,:))*0.0581,min(LArr(25,:))*0.0581]

P0=0.1/(1e-6*1e-6);
n=2;
N=1e25;
aa=1e-30;
LP=aa*N*(((n-1)*(aa*N*XX+(P0^(1-n)./(n-1)))).^(1/(1-n))).^n;
hold on;plot(XX,LP./max(LP),'LineWidth',2.5)

% RECT=[RECT(7,:);RECT(12,:);RECT(15,:);RECT(7+30,:);RECT(12+30,:);RECT(17+30,:);RECT(7+60,:);RECT(13+60,:);RECT(19+60,:)];

% Separated color channels
N=11; % The number of PreVid frames. These will not be analysed later because they don't contain fluorescence information
ENR=[];LArr=[];ENB=[];
for i=1:30
    EmInt1R=[];LD=[];EmInt1B=[];
    for l=1:length(RECT) % You can choose to analyse only a portion of the autogenerated ROIs 
        ROI1=RECT(l,:);p=l;
        ROCx = (RECT(p,1) + RECT(p,1)+RECT(p,3))/2;
        ROCy = (RECT(p,2) + RECT(p,2)+RECT(p,4))/2;
        LD=[LD;sqrt((DRF(1,i)-ROCx)^2+(DRF(2,i)-ROCy)^2)];
        % BG Corr
        figure(1);VG=imagesc(s(1).cdata);
        imh = findobj(figure(1), 'type', 'image');
        YourData = get(imh(1),'CData');
        Cr = imcrop(YourData, [ROI1]);
        S1=size(Cr(:,:,1));S2=size(Cr(:,:,2));S3=size(Cr(:,:,3));
%         EmIntBG1R=sum(sum(Cr(:,:,1)))/(S1(1)*S1(2));
        EmIntBG1R=1;
        EmIntBG1B=sum(sum(Cr(:,:,3)))/(S3(1)*S3(2));
        % ROI calc
        figure(1);VG=imagesc(s(i).cdata);
        imh = findobj(figure(1), 'type', 'image');
        YourData = get(imh(1),'CData');
        Cr = imcrop(YourData, [ROI1]);
        S1=size(Cr(:,:,1));S2=size(Cr(:,:,2));S3=size(Cr(:,:,3));
        EmInt1R=[EmInt1R;sum(sum(Cr(:,:,1)))/(S1(1)*S1(2))-EmIntBG1R];
        EmInt1B=[EmInt1B;sum(sum(Cr(:,:,3)))/(S3(1)*S3(2))-EmIntBG1B];
    end 
    ENR=[ENR,EmInt1R];
    ENB=[ENB,EmInt1B];
    LArr=[LArr,LD];
end
PG=((s(1).cdata)-2.5)*0.15;
for i=1:420-11
    PG=PG+((s(i).cdata)-2.5)*0.15;
end
VG=(s(length(s)).cdata)*1.3+PG*1;
imagesc(VG)

% Scale bar OM pic
qq=zeros(1200,1920);
ww=zeros(1200,1920);
ww1=ww;
ZH=cat(3,qq,ww,ww1);
ZH(900:910,1000:1171,:)=200;
ZH=im2uint8(ZH);PGP=PG;PGP(round(PA(2)):round(PA(2)+PA(4)),round(PA(1)):round(PA(1)+PA(3)),:)=0;
GG=(s(length(s)).cdata)*1+PGP*5+ZH;
PGP=s(length(s)).cdata;PGP(round(TotR(2)):round(TotR(2)+TotR(4)),round(TotR(1)):round(TotR(1)+TotR(3)),1)=105;PGP(round(TotR(2)):round(TotR(2)+TotR(4)),round(TotR(1)):round(TotR(1)+TotR(3)),2)=60;PGP(round(TotR(2)):round(TotR(2)+TotR(4)),round(TotR(1)):round(TotR(1)+TotR(3)),3)=0;

qq=zeros(1024,1024);
ww=zeros(1024,1024);
ww1=ww;
ZH=cat(3,qq,ww,ww1);
ww(900:910,900:975,:)=5000;
ww=im2uint16(ww);PGP=PG;PGP(round(PA(2)):round(PA(2)+PA(4)),round(PA(1)):round(PA(1)+PA(3)),:)=0;
GG=(s(length(s)).cdata)*1+PGP*5+ZH;
PGP=s(length(s)).cdata;PGP(round(TotR(2)):round(TotR(2)+TotR(4)),round(TotR(1)):round(TotR(1)+TotR(3)),1)=105;PGP(round(TotR(2)):round(TotR(2)+TotR(4)),round(TotR(1)):round(TotR(1)+TotR(3)),2)=60;PGP(round(TotR(2)):round(TotR(2)+TotR(4)),round(TotR(1)):round(TotR(1)+TotR(3)),3)=0;
%% Gaus plots 2
DDS1=DD1;MPS1=MPH1;scatter(DDS1,MPS1,40,'o','Filled','color','k');
hold on; plot(min(DDS1):0.01:max(DDS1),a1*exp(-(((min(DDS1):0.01:max(DDS1))-b1)/c1).^2)+a2*exp(-(((min(DDS1):0.01:max(DDS1))-b2)/c2).^2)+d,'LineWidth',2,'color','r')
xlim([min(DDS1) max(DDS1)])
ylim([-2 1.2*max(MPS1)])
xlabel("Distance along ROI slice")
ylabel("Waveguided emission intensity (RGB counts)")
legend('Data','Double gaussian fit')

SprSinN=[5.324*2.355,8.859*2.355];
SprSinF=[2.117*2.355,9.523*2.355];
SprSliceN=[0.7461*2.355,0.3946*2.355];
SprSliceF=[0.271*2.355,0.3846*2.355];

ErrLS12=[0.647*2.355,0.08135*2.355];ErrHS12=[0.8451*2.355,0.4606*2.355];ErrLS34=[0.2908*2.355,0.3087*2.355];ErrHS34=[0.4983*2.355,0.4606*2.355];
ErrL12=[5.027*2.355,1.649*2.355];ErrH12=[5.621*2.355,2.585*2.355];ErrL34=[8.229*2.355,9.321*2.355];ErrH34=[9.488*2.355,9.726*2.355];

SprSliceN=[0.4434*2.355,0.2839*2.355];
SprSliceF=[1.704*2.355,1.197*2.355];
ErrL12=[0.3665*2.355,1.569*2.355];ErrH12=[0.5202*2.355,1.839*2.355];ErrL34=[0.1593*2.355,0.9989*2.355];ErrH34=[0.4085*2.355,1.395*2.355];

SprSliceN=[1.553*2.355,0.5332*2.355];
SprSliceF=[0.3818*2.355,0.7784*2.355];
ErrL12=[1.307*2.355,0.3214*2.355];ErrH12=[1.799*2.355,0.4422*2.355];ErrL34=[0.4785*2.355,0.6163*2.355];ErrH34=[0.5879*2.355,0.9404*2.355];

subplot(1,2,1);
errorbar(1:2,[SprSinN(2) SprSinF(2)],[ErrH34(1)-ErrL34(1),ErrH34(2)-ErrL34(2)],'o-','LineWidth',1.5)
xlim([0.8 2.2])
hold on;errorbar(1:2,[SprSinN(1) SprSinF(1)],[ErrH12(1)-ErrL12(1),ErrH12(2)-ErrL12(2)],'o-','LineWidth',1.5)
ylim([0 37])
xticks([1 2])
ylabel("FWHM (Degrees)");title('Acceptance angle')
subplot(1,2,2);errorbar(1:2,[SprSliceN(1) SprSliceF(1)],[ErrHS12(1)-ErrLS12(1),ErrHS12(2)-ErrLS12(2)],'o-','LineWidth',1.5)
xlim([0.8 2.2]);ylim([0 3]);
hold on
errorbar(1:2,[SprSliceN(2) SprSliceF(2)],[ErrHS34(1)-ErrLS34(1),ErrHS34(2)-ErrLS34(2)],'o-','LineWidth',1.5)
ylabel("FWHM (\mum)");title('Emission spread')
xticks([1 2]);fontsize(gcf,scale=1.5)

SprI45N=[4.103*2.355,4.016*2.355,4.263*2.355];
SprI57N=[7.586*2.355,5.407*2.355,6.006*2.355];
SprI70N=[4.516*2.355,6.103*2.355,5.368*2.355];
ErrL45N=[3.889*2.355,3.88*2.355,4.078*2.355];ErrH45N=[4.318*2.355,4.152*2.355,4.449*2.355];
ErrL57N=[7.007*2.355,5.148*2.355,5.766*2.355];ErrH57N=[8.165*2.355,5.667*2.355,6.246*2.355];
ErrL70N=[4.12*2.355,5.702*2.355,5.141*2.355];ErrH70N=[4.912*2.355,6.503*2.355,5.594*2.355];

SprI45=[18.94*2.355,17.79*2.355,15.66*2.355];
SprI57=[19.43*2.355,15.97*2.355,15*2.355];
SprI70=[19.66*2.355,19.39*2.355,21.81*2.355];
ErrL45=[18.69*2.355,17.45*2.355,15.26*2.355];ErrH45=[19.19*2.355,18.13*2.355,16.05*2.355];
ErrL57=[18.85*2.355,15.53*2.355,14.48*2.355];ErrH57=[20.02*2.355,16.4*2.355,15.52*2.355];
ErrL70=[19.28*2.355,18.54*2.355,20.49*2.355];ErrH70=[20.05*2.355,20.24*2.355,23.12*2.355];

subplot(1,2,1);
errorbar(1:3,SprI45N,ErrH45N-ErrL45N,'o-','LineWidth',1.5)
xlim([0.8 3.2]);ylim([0 22])
hold on;errorbar(1:3,SprI57N,ErrH57N-ErrL57N,'o-','LineWidth',1.5)
hold on;errorbar(1:3,SprI70N,ErrH70N-ErrL70N,'o-','LineWidth',1.5)
xticks([1 2 3])
ylabel("FWHM (Degrees)");title('Acceptance angle (Narrow peak)')
subplot(1,2,2);
errorbar(1:3,SprI45,ErrH45-ErrL45,'o-','LineWidth',1.5)
xlim([0.8 3.2]);ylim([0 60])
hold on;errorbar(1:3,SprI57,ErrH57-ErrL57,'o-','LineWidth',1.5)
hold on;errorbar(1:3,SprI70,ErrH70-ErrL70,'o-','LineWidth',1.5)
xticks([1 2 3])
ylabel("FWHM (Degrees)");title('Acceptance angle (Broad peak)')
xticks([1 2]);fontsize(gcf,scale=1.2)

SprSlice45N=[0.668*2.355,0.3953*2.355,0.4474*2.355];
SprSlice57N=[0.5415*2.355,0.4479*2.355,0.8259*2.355];
SprSlice70N=[0.4112*2.355,0.3885*2.355,0.542*2.355];
ErrL45N=[0.5734*2.355,0.3495*2.355,0.3613*2.355];ErrH45N=[0.7626*2.355,0.4411*2.355,0.5345*2.355];
ErrL57N=[0.4562*2.355,0.3946*2.355,0.7406*2.355];ErrH57N=[0.6266*2.355,0.5011*2.355,0.9111*2.355];
ErrL70N=[0.365*2.355,0.3396*2.355,0.4285*2.355];ErrH70N=[0.4575*2.355,0.4377*2.355,0.6555*2.355];

SprSlice45=[2.223*2.355,1.652*2.355,1.291*2.355];
SprSlice57=[1.663*2.355,1.576*2.355];
SprSlice70=[1.573*2.355,1.595*2.355,1.495*2.355];
ErrL45=[1.553*2.355,1.491*2.355,1.193*2.355];ErrH45=[2.893*2.355,1.814*2.355,1.39*2.355];
ErrL57=[1.338*2.355,1.367*2.355];ErrH57=[1.998*2.355,1.784*2.355];
ErrL70=[1.439*2.355,1.453*2.355,1.092*2.355];ErrH70=[1.707*2.355,1.737*2.355,1.899*2.355];

minArr=[min(LArr(1,:))*0.0581 min(LArr(2,:))*0.0581 min(LArr(3,:))*0.0581 min(LArr(5,:))*0.0581];
Spr1=[3.935*2.355,1.622*2.355];Spr2=[1.237*2.355,3.569*2.355];Spr3=[3.904*2.355,5.907*2.355];Spr4=[4.552*2.355,6.11*2.355];
ErrH1=[4.187*2.355,2.105*2.355];ErrL1=[3.682*2.355,1.138*2.355];ErrH2=[1.562*2.355,3.792*2.355];ErrL2=[0.9119*2.355,3.345*2.355];ErrH3=[4.016*2.355,6.574*2.355];ErrL3=[3.792*2.355,5.241*2.355];ErrH4=[5.058*2.355,6.441*2.355];ErrL4=[4.019*2.355,5.779*2.355];

SprN=[0.861*2.355,0.3005*2.355,0.4519*2.355,0.3595*2.355,0.6806*2.355,0.5963*2.355];
SprW=[2.652*2.355,1.667*2.355,1.693*2.355,1.798*2.355,2.797*2.355,2.516*2.355];
ErrNL=[0.6335*2.355,0.1748*2.355,0.302*2.355,0.2639*2.355,0.5602*2.355,0.4916*2.355];ErrNH=[1.089*2.355,0.4263*2.355,0.6019*2.355,0.455*2.355,0.801*2.355,0.7011];
ErrWL=[0.7325*2.355,1.434*2.355,1.392*2.355,1.528*2.355,1.686*2.355,1.969*2.355];ErrWH=[4.571*2.355,1.9*2.355,1.994*2.355,2.067*2.355,3.908*2.355,3.063*2.355];

SprN=[0.4335*2.355,0.4724*2.355,0.5305*2.355,1.187*2.355];
SprW=[0.628*2.355,1.286*2.355,1.299*2.355,1.987*2.355];
ErrNL=[0.2222*2.355,0.2611*2.355,0.4042*2.355,0.8935*2.355];ErrNH=[0.6448*2.355,0.6837*2.355,0.6568*2.355,1.481*2.355];
ErrWL=[0.5772*2.355,1.195*2.355,1.261*2.355,1.666*2.355];ErrWH=[0.6788*2.355,1.377*2.355,1.338*2.355,2.309*2.355];

SprN=[0.8997*2.355,1.807*2.355,0.953*2.355,1.561*2.355,1.782*2.355];
ErrNL=[0.849*2.355,1.69*2.355,0.842*2.355,1.467*2.355,1.665*2.355];ErrNH=[0.9504*2.355,1.924*2.355,1.064*2.355,1.656*2.355,1.898*2.355];
SprS=[0.4699*2.355,0.8124*2.355,1.183*2.355];
ErrSL=[0.3063*2.355,0.7143*2.355,0.8083*2.355];ErrSH=[0.6336*2.355,0.9106*2.355,1.557*2.355];


errorbar(1:2,Spr1,ErrH1-ErrL1,'o','LineWidth',1.5)
xlim([0.8 2.2])
hold on
errorbar(1:2,Spr2,ErrH2-ErrL2,'o','LineWidth',1.5)
errorbar(1:2,Spr3,ErrH3-ErrL3,'o','LineWidth',1.5)
errorbar(1:2,Spr4,ErrH4-ErrL4,'o','LineWidth',1.5)
xticklabels({'Azimuthal polarization','Radial polarization'})

SprQDedge=[3.819*2.355,4.554*2.355];
ErrH=[4.077*2.355,4.814*2.355];ErrL=[3.562*2.355,4.268*2.355];
%% Total waveguided counts 
BA=[TotR(1)-155/2,TotR(2)+TotR(4)/2-155/2,155,155];
N=11; % The number of PreVid frames. These will not be analysed later because they don't contain fluorescence information
EmInt1=[];LD=[];
for i=1:length(s)-N
    ROI1=BA;
    % BG Corr
    figure(1);VG=imagesc(s(1).cdata);
    imh = findobj(figure(1), 'type', 'image');
    YourData = get(imh(1),'CData');
    Cr = imcrop(YourData, [ROI1]);
    S1=size(Cr(:,:,1));S2=size(Cr(:,:,2));S3=size(Cr(:,:,3));
    PL=sum(sum(Cr(:,:,1)))/(S1(1)*S1(2))+sum(sum(Cr(:,:,2)))/(S2(1)*S2(2))+sum(sum(Cr(:,:,3)))/(S3(1)*S3(2));
    Cp = (s(1).cdata);
    S1=size(Cp(:,:,1));S2=size(Cp(:,:,2));S3=size(Cp(:,:,3));
%     EmIntBG1=sum(sum(Cp(:,:,1)))/(S1(1)*S1(2))+sum(sum(Cp(:,:,2)))/(S2(1)*S2(2))+sum(sum(Cp(:,:,3)))/(S3(1)*S3(2))-PL;
    EmIntBG1=2.5;
    % ROI calc
    figure(1);VG=imagesc(s(i).cdata);
    imh = findobj(figure(1), 'type', 'image');
    YourData = get(imh(1),'CData');
    Cr = imcrop(YourData, [ROI1]);
    S1=size(Cr(:,:,1));S2=size(Cr(:,:,2));S3=size(Cr(:,:,3));
    PLA=sum(sum(Cr(:,:,1)))/(S1(1)*S1(2))+sum(sum(Cr(:,:,2)))/(S2(1)*S2(2))+sum(sum(Cr(:,:,3)))/(S3(1)*S3(2));
    Cp = (s(i).cdata);
    S1=size(Cp(:,:,1));S2=size(Cp(:,:,2));S3=size(Cp(:,:,3));
    EmInt1=[EmInt1,(sum(sum(Cp(:,:,1)))/(S1(1)*S1(2))+sum(sum(Cp(:,:,2)))/(S2(1)*S2(2))+sum(sum(Cp(:,:,3)))/(S3(1)*S3(2))-PLA)-EmIntBG1];
end


PG(round(BA(2)):round(BA(2)+BA(4)),round(BA(1)):round(BA(1)+BA(3)),:)=0;

BA=[TotR(1)-120/2,TotR(2)+TotR(4)/2-120/2,120,120];
PA=[TotR(1)-250/2,TotR(2)+TotR(4)/2-250/2,250,250];
N=11; % The number of PreVid frames. These will not be analysed later because they don't contain fluorescence information
EmInt1=[];LD=[];
for i=1:length(s)-N
    figure(1);VG=imagesc(s(1).cdata);
    imh = findobj(figure(1), 'type', 'image');
    YourData = get(imh(1),'CData');Cr = imcrop(YourData, [CRR]);
    Cr(round(BA(2)):round(BA(2)+BA(4)),round(BA(1)):round(BA(1)+BA(3)),:)=0;
    S1=size(Cr(:,:,1));S2=size(Cr(:,:,2));S3=size(Cr(:,:,3));
    EmIntBG1=sum(sum(Cr(:,:,1)))/(S1(1)*S1(2))+sum(sum(Cr(:,:,2)))/(S2(1)*S2(2))+sum(sum(Cr(:,:,3)))/(S3(1)*S3(2));
    figure(1);VG=imagesc(s(i).cdata);
    imh = findobj(figure(1), 'type', 'image');
    YourData = get(imh(1),'CData');Cr = imcrop(YourData, [CRR]);
    Cr(round(BA(2)):round(BA(2)+BA(4)),round(BA(1)):round(BA(1)+BA(3)),:)=0;
    S1=size(Cr(:,:,1));S2=size(Cr(:,:,2));S3=size(Cr(:,:,3));
    EmInt1=[EmInt1;sum(sum(Cr(:,:,1)))/(S1(1)*S1(2))+sum(sum(Cr(:,:,2)))/(S2(1)*S2(2))+sum(sum(Cr(:,:,3)))/(S3(1)*S3(2))-EmIntBG1];
end

i=200
figure(1);VG=imagesc(s(i).cdata);
imh = findobj(figure(1), 'type', 'image');
YourData = get(imh(1),'CData');Cr = imcrop(YourData, [ROI1]);
YourData((round(ROI1(2)):round(ROI1(2)+ROI1(4))),(round(ROI1(1)):round(ROI1(1)+ROI1(3))),:)=0;
S1=size(Cr(:,:,1));S2=size(Cr(:,:,2));S3=size(Cr(:,:,3));
PL=sum(sum(YourData(:,:,1)))+sum(sum(YourData(:,:,2)))+sum(sum(YourData(:,:,3)));
Cp = (s(1).cdata);
S11=size(Cp(:,:,1));S22=size(Cp(:,:,2));S33=size(Cp(:,:,3));
EmInt1P=PL/(3*(S11(1)*S11(2)-S1(1)*S1(2)))

d=360; %Fill in the frame where you see nanoparticle emission here
VG=(s(434).cdata)*0.7+(s(d).cdata);
% PG=imcrop(VG,[PA]);
[J,ROI1] = imcrop(VG); % CHANGE ROI1 here to something else each time you choose another nanoparticle
[J2,ROI2] = imcrop(VG);
[J3,ROI3] = imcrop(VG);
[J4,ROI4] = imcrop(VG);
[J4,ROI5] = imcrop(VG);
[J4,ROI6] = imcrop(VG);

RECT=[ROI1;ROI2;ROI3;ROI4;ROI5;ROI6];
RECTT=[];
for i=1:length(RECT)
    RECTT=[RECTT;[RECT(i,1)+PA(1) RECT(i,2)+PA(2) RECT(i,3) RECT(i,4)]];
end

i=19
scatter(DD,EN(:,i),30,'o','Filled','color','k');
hold on; plot(min(DD):0.01:max(DD),a1*exp(-(((min(DD):0.01:max(DD))-b1)/c1).^2)+a2*exp(-(((min(DD):0.01:max(DD))-b2)/c2).^2)+d,'LineWidth',1.5,'color','b')
xlim([min(DD) max(DD)])
ylim([-2 max(EN(:,i))+max(EN(:,i))*0.1])
xlabel("d_s (\mum)")
ylabel("RGB counts")
legend(append('Data (ROI ',num2str(i),')'),'Double gaussian fit')